Index: src/mem-system/module.c
===================================================================
--- src/mem-system/module.c	(revision 1265)
+++ src/mem-system/module.c	(working copy)
@@ -124,6 +124,19 @@
 	stack->event_queue_item = event_queue_item;
 	stack->client_info = client_info;
 
+	if (mod->kind == mod_kind_cache_bypass) {
+		stack->target_mod = mod;
+		while(mod_get_low_mod(stack->target_mod, stack->tag)) {
+			warning("Hack: mod_kind_cache_bypass module pushed to next level cache");
+			stack->target_mod = mod_get_low_mod(stack->target_mod, stack->tag);
+			stack->peer = mod_stack_set_peer(stack->target_mod, stack->state);			
+			stack->request_dir = mod_request_up_down;
+		}
+		warning("Hack: kind of module changed from mod_kind_cache_bypass to mod_kind_main_memory");
+
+		mod->kind = mod_kind_main_memory;
+	}
+
 	/* Select initial CPU/GPU event */
 	if (mod->kind == mod_kind_cache || mod->kind == mod_kind_main_memory)
 	{
Index: src/mem-system/module.h
===================================================================
--- src/mem-system/module.h	(revision 1265)
+++ src/mem-system/module.h	(working copy)
@@ -56,6 +56,7 @@
 {
 	mod_kind_invalid = 0,
 	mod_kind_cache,
+	mod_kind_cache_bypass,
 	mod_kind_main_memory,
 	mod_kind_local_memory
 };
Index: src/arch/southern-islands/timing/scalar-unit.c
===================================================================
--- src/arch/southern-islands/timing/scalar-unit.c	(revision 1265)
+++ src/arch/southern-islands/timing/scalar-unit.c	(working copy)
@@ -352,9 +352,12 @@
 			/* FIXME Get rid of dependence on wavefront here */
 			uop->global_mem_access_addr =
 				uop->wavefront->scalar_work_item->global_mem_access_addr;
+			enum mod_kind_t temp = scalar_unit->compute_unit->global_memory->kind;
+			scalar_unit->compute_unit->global_memory->kind = mod_kind_cache_bypass;
 			mod_access(scalar_unit->compute_unit->global_memory,
 				mod_access_load, uop->global_mem_access_addr,
 				&uop->global_mem_witness, NULL, NULL, NULL);
+			scalar_unit->compute_unit->global_memory->kind = temp;
 
 			/* Increment outstanding memory access count */
 			uop->wavefront_pool_entry->lgkm_cnt++;
